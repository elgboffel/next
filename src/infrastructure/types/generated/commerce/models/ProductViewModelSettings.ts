/**
 * Dynamicweb Headless Delivery API
 * API Endpoints for Dynamicweb.
 *
 * OpenAPI spec version: 10.0.0-RC006
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AssetCategoryViewModelSettings } from '../models/AssetCategoryViewModelSettings';
import { CategoryFieldViewModelSetting } from '../models/CategoryFieldViewModelSetting';
import { FieldValueViewModelSetting } from '../models/FieldValueViewModelSetting';
import { GroupInfoViewModelSettings } from '../models/GroupInfoViewModelSettings';
import { ManufacturerViewModelSettings } from '../models/ManufacturerViewModelSettings';
import { MediaViewModelSettings } from '../models/MediaViewModelSettings';
import { PriceViewModelSettings } from '../models/PriceViewModelSettings';
import { StockUnitViewModelSettings } from '../models/StockUnitViewModelSettings';
import { UnitOptionViewModelSettings } from '../models/UnitOptionViewModelSettings';
import { VariantInfoViewModelSettings } from '../models/VariantInfoViewModelSettings';

export class ProductViewModelSettings {
    'filledProperties'?: Array<string>;
    'languageId'?: string;
    'userId'?: number;
    'orderDate'?: Date;
    'showPricesWithVat'?: boolean;
    'stockLocationId'?: number;
    'currencyCode'?: string;
    'countryCode'?: string;
    'shopId'?: string;
    'time'?: Date;
    'loadVariantInfoOnVariants'?: boolean;
    'priceSettings'?: PriceViewModelSettings;
    'mediaSettings'?: MediaViewModelSettings;
    'manufacturerSettings'?: ManufacturerViewModelSettings;
    'categoryFieldSettings'?: CategoryFieldViewModelSetting;
    'productFieldSettings'?: FieldValueViewModelSetting;
    'variantInfoSettings'?: VariantInfoViewModelSettings;
    'groupInfoSettings'?: GroupInfoViewModelSettings;
    'assetCategorySettings'?: AssetCategoryViewModelSettings;
    'stockUnitSettings'?: StockUnitViewModelSettings;
    'unitOptionSettings'?: UnitOptionViewModelSettings;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "filledProperties",
            "baseName": "filledProperties",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "languageId",
            "baseName": "languageId",
            "type": "string",
            "format": ""
        },
        {
            "name": "userId",
            "baseName": "userId",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "orderDate",
            "baseName": "orderDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "showPricesWithVat",
            "baseName": "showPricesWithVat",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "stockLocationId",
            "baseName": "stockLocationId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "currencyCode",
            "baseName": "currencyCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "countryCode",
            "baseName": "countryCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "shopId",
            "baseName": "shopId",
            "type": "string",
            "format": ""
        },
        {
            "name": "time",
            "baseName": "time",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "loadVariantInfoOnVariants",
            "baseName": "loadVariantInfoOnVariants",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "priceSettings",
            "baseName": "priceSettings",
            "type": "PriceViewModelSettings",
            "format": ""
        },
        {
            "name": "mediaSettings",
            "baseName": "mediaSettings",
            "type": "MediaViewModelSettings",
            "format": ""
        },
        {
            "name": "manufacturerSettings",
            "baseName": "manufacturerSettings",
            "type": "ManufacturerViewModelSettings",
            "format": ""
        },
        {
            "name": "categoryFieldSettings",
            "baseName": "categoryFieldSettings",
            "type": "CategoryFieldViewModelSetting",
            "format": ""
        },
        {
            "name": "productFieldSettings",
            "baseName": "productFieldSettings",
            "type": "FieldValueViewModelSetting",
            "format": ""
        },
        {
            "name": "variantInfoSettings",
            "baseName": "variantInfoSettings",
            "type": "VariantInfoViewModelSettings",
            "format": ""
        },
        {
            "name": "groupInfoSettings",
            "baseName": "groupInfoSettings",
            "type": "GroupInfoViewModelSettings",
            "format": ""
        },
        {
            "name": "assetCategorySettings",
            "baseName": "assetCategorySettings",
            "type": "AssetCategoryViewModelSettings",
            "format": ""
        },
        {
            "name": "stockUnitSettings",
            "baseName": "stockUnitSettings",
            "type": "StockUnitViewModelSettings",
            "format": ""
        },
        {
            "name": "unitOptionSettings",
            "baseName": "unitOptionSettings",
            "type": "UnitOptionViewModelSettings",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ProductViewModelSettings.attributeTypeMap;
    }

    public constructor() {
    }
}

