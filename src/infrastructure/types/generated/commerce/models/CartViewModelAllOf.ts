/**
 * Dynamicweb Headless Delivery API
 * API Endpoints for Dynamicweb.
 *
 * OpenAPI spec version: 10.0.0-RC004
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CartOrderlineViewModel } from '../models/CartOrderlineViewModel';
import { PriceViewModel } from '../models/PriceViewModel';

export class CartViewModelAllOf {
    'id'?: string;
    'productsCount'?: number;
    'totalProductsCount'?: number;
    'orderlinesCount'?: number;
    'cartOrderlines'?: Array<CartOrderlineViewModel>;
    'totalPrice'?: PriceViewModel;
    'totalDiscount'?: PriceViewModel;
    'totalPriceWithoutDiscounts'?: PriceViewModel;
    'totalPriceWithoutFees'?: PriceViewModel;
    'paymentMethod'?: string;
    'paymentFee'?: PriceViewModel;
    'shippingMethod'?: string;
    'shippingFee'?: PriceViewModel;
    'isEmpty'?: boolean;
    'totalPriceWithoutDiscountsFeesAndTaxes'?: PriceViewModel;
    'totalPriceWithoutOrderDiscountsAndFeesAndTaxes'?: PriceViewModel;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "productsCount",
            "baseName": "productsCount",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "totalProductsCount",
            "baseName": "totalProductsCount",
            "type": "number",
            "format": "double"
        },
        {
            "name": "orderlinesCount",
            "baseName": "orderlinesCount",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "cartOrderlines",
            "baseName": "cartOrderlines",
            "type": "Array<CartOrderlineViewModel>",
            "format": ""
        },
        {
            "name": "totalPrice",
            "baseName": "totalPrice",
            "type": "PriceViewModel",
            "format": ""
        },
        {
            "name": "totalDiscount",
            "baseName": "totalDiscount",
            "type": "PriceViewModel",
            "format": ""
        },
        {
            "name": "totalPriceWithoutDiscounts",
            "baseName": "totalPriceWithoutDiscounts",
            "type": "PriceViewModel",
            "format": ""
        },
        {
            "name": "totalPriceWithoutFees",
            "baseName": "totalPriceWithoutFees",
            "type": "PriceViewModel",
            "format": ""
        },
        {
            "name": "paymentMethod",
            "baseName": "paymentMethod",
            "type": "string",
            "format": ""
        },
        {
            "name": "paymentFee",
            "baseName": "paymentFee",
            "type": "PriceViewModel",
            "format": ""
        },
        {
            "name": "shippingMethod",
            "baseName": "shippingMethod",
            "type": "string",
            "format": ""
        },
        {
            "name": "shippingFee",
            "baseName": "shippingFee",
            "type": "PriceViewModel",
            "format": ""
        },
        {
            "name": "isEmpty",
            "baseName": "isEmpty",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "totalPriceWithoutDiscountsFeesAndTaxes",
            "baseName": "totalPriceWithoutDiscountsFeesAndTaxes",
            "type": "PriceViewModel",
            "format": ""
        },
        {
            "name": "totalPriceWithoutOrderDiscountsAndFeesAndTaxes",
            "baseName": "totalPriceWithoutOrderDiscountsAndFeesAndTaxes",
            "type": "PriceViewModel",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CartViewModelAllOf.attributeTypeMap;
    }

    public constructor() {
    }
}

